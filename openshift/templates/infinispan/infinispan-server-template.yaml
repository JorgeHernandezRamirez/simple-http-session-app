apiVersion: v1
kind: Template
metadata:
  name: infinispan-server
  annotations:
    openshift.io/display-name: Infinispan server
    description: Infinispan server
    tags: infinispan,server
    openshift.io/provider-display-name: Red Hat
    openshift.io/documentation-url: http://www.infinispan.org/
    openshift.io/support-url: https://access.redhat.com
labels:
  app: infinispan-server
parameters:
- name: APPLICATION_NAME
  displayName: Application name
  description: The name for the application.
  value: infinispan-server
  required: true
- name: APPLICATION_HOSTNAME
  displayName: Application hostname
  description: 'Custom hostname for service routes.  Leave blank for default hostname, e.g.: <application-name>.<project>.<default-domain-suffix>'
  value: ''
  required: false
- name: INFINISPAN_USER
  description: Infinispan server user
  displayName: Infinispan server user
  value: 'libertyUser'
  required: true
- name: INFINISPAN_PASSWORD
  description: Infinispan server password
  displayName: Infinispan server password
  value: 'libertyPassword'
  required: true
- name: GENERIC_TRIGGER_SECRET
  displayName: Generic build trigger secret
  description: Generic build trigger secret
  from: "[a-zA-Z0-9]{8}"
  generate: expression
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: "${APPLICATION_NAME}"
    annotations:
      template.alpha.openshift.io/wait-for-ready: 'true'
    labels:
      deploymentConfig: "${APPLICATION_NAME}"
  spec:
    strategy:
      type: Recreate
    triggers:
    triggers:
     - type: ImageChange
       imageChangeParams:
         automatic: true
         containerNames:
         - "${APPLICATION_NAME}"
         from:
           kind: ImageStreamTag
           name: "${APPLICATION_NAME}:latest"
     - type: ConfigChange
    replicas: 1
    selector:
      deploymentConfig: "${APPLICATION_NAME}"
    template:
      metadata:
        labels:
          deploymentConfig: "${APPLICATION_NAME}"
      spec:
        containers:
        - name: "${APPLICATION_NAME}"
          image: "${APPLICATION_NAME}"
          ports:
          - containerPort: 7800
            protocol: TCP
          - containerPort: 11221
            protocol: TCP
          - containerPort: 11222
            protocol: TCP
          - containerPort: 45700
            protocol: TCP
          - containerPort: 57600
            protocol: TCP
          env:
          - name: USER
            value: "${INFINISPAN_USER}"
          - name: PASS
            value: "${INFINISPAN_PASSWORD}"
          resources:
            limits:
              cpu: 300m
              memory: 300Mi
            requests:
              cpu: 300m
              memory: 300Mi
          imagePullPolicy: Always
          securityContext:
            capabilities: {}
            privileged: false
        restartPolicy: Always
        dnsPolicy: ClusterFirst
- apiVersion: v1
  kind: Service
  metadata:
    name: "${APPLICATION_NAME}"
    annotations:
      description: The Infinispan server's ports
  spec:
    ports:
    - name: 7800-tcp
      port: 7800
      protocol: TCP
      targetPort: 7800
    - name: 11221-tcp
      port: 11221
      protocol: TCP
      targetPort: 11221
    - name: 11222-tcp
      port: 11222
      protocol: TCP
      targetPort: 11222
    - name: 45700-tcp
      port: 45700
      protocol: TCP
      targetPort: 45700
    - name: 57600-tcp
      port: 57600
      protocol: TCP
      targetPort: 57600
    selector:
      deploymentConfig: "${APPLICATION_NAME}"
